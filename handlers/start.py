from aiogram import Router, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, BotCommand, BotCommandScopeDefault, CallbackQuery
from create_bot import bot
from keyboards.all_keyboards import main_kb, create_spec_kb
import keyboards.inline_keyboards as inline_keyboards

start_router = Router()
#BotCommand(command='Links', description='–°—Å—ã–ª–∫–∏')
#BotCommand(command='hello', description='–ø—Ä–∏–≤–µ—Ç')
async def set_commands():
    commands = [BotCommand(command='start', description='–°—Ç–∞—Ä—Ç'),
                BotCommand(command='profile', description='–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å'),
                BotCommand(command='links', description='–°—Å—ã–ª–∫–∏')]
    await bot.set_my_commands(commands, BotCommandScopeDefault())

@start_router.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer('–ó–∞–ø—É—Å–∫ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ –∫–æ–º–∞–Ω–¥–µ /start –∏—Å–ø–æ–ª—å–∑—É—è —Ñ–∏–ª—å—Ç—Ä CommandStart()',
                        reply_markup=main_kb(message.from_user.id))

#@start_router.message(Command(commands=['start2']))
@start_router.message(Command("test"))
async def cmd_start_2(message: Message):
    await message.answer('–ó–∞–ø—É—Å–∫ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ –∫–æ–º–∞–Ω–¥–µ /test –∏—Å–ø–æ–ª—å–∑—É—è —Ñ–∏–ª—å—Ç—Ä Command()',
                        reply_markup=create_spec_kb())

    
@start_router.message(F.text.lower().contains('hello'))
async def cmd_start_3(message: Message):
    await message.answer('–ü—Ä–∏–≤–µ—Ç!', reply_markup=inline_keyboards.iease_link_kb())

@start_router.message(Command(commands=['links']))
async def get_inline_btn_link(message: Message):
    await message.answer('–°—Å—ã–ª–∫–∏ –Ω–∞ –Ω–∞—à–∏ —Ä–µ—Å—É—Ä—Å—ã', reply_markup=inline_keyboards.ease_link_kb())

@start_router.message(Command(commands=['menu']))
async def get_inline_btn_menu(message: Message):
    await message.answer('–ú–µ–Ω—é', reply_markup=inline_keyboards.main_inline_kb())

@start_router.callback_query(F.data == 'back_to_menu')
async def get_inline_btn_back(call: CallbackQuery):
    '''
    prev = user_prev_menu.get(call.from_user.id)
    text, markup = prev
    '''
    #call.message.answer(text, reply_markup=markup)
    call.message.answer('back')

@start_router.callback_query(F.data == 'about_school')
async def get_inline_btn_about(call: CallbackQuery):
    await call.message.answer()

@start_router.callback_query(F.data == 'schedule')
async def get_inline_btn_shedule(call: CallbackQuery):
    await call.message.edit_text('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ', reply_markup=inline_keyboards.inline_kb_schedule())
    await call.answer()

@start_router.callback_query(F.data == 'general_schedule')
async def get_inline_btn_general(call: CallbackQuery):
    schedule = ('üìï–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π –Ω–∞ –æ—Å–µ–Ω–Ω–∏–π –ø–µ—Ä–∏–æ–¥:\n'
    'üéâ–£—Ä–æ–≤–µ–Ω—å –ê0 (—Å –Ω—É–ª—è) - –ø–æ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞–º –∏ —Å—Ä–µ–¥–∞–º –≤ 18:00;\n'
    'üéâ–£—Ä–æ–≤–µ–Ω—å –ê1.1 - –ø–æ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞–º –∏ —Å—Ä–µ–¥–∞–º –≤ 18:00;\n'
    'üéâ–£—Ä–æ–≤–µ–Ω—å –ê1.2 - –ø–æ –≤—Ç–æ—Ä–Ω–∏–∫–∞–º –∏ —á–µ—Ç–≤–µ—Ä–≥–∞–º –≤ 20:00;\n'
    'üéâ–£—Ä–æ–≤–µ–Ω—å –ê2.1 - –ø–æ –≤—Ç–æ—Ä–Ω–∏–∫–∞–º –∏ —á–µ—Ç–≤–µ—Ä–≥–∞–º –≤ 20:00;\n'
    'üéâ–£—Ä–æ–≤–µ–Ω—å –ê2.2 - –ø–æ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞–º –∏ —Å—Ä–µ–¥–∞–º –≤ 20:00;\n'
    'üéâ–£—Ä–æ–≤–µ–Ω—å B1- –ø–æ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞–º –∏ —Å—Ä–µ–¥–∞–º –≤ 20:00;\n'
    'üéâ–£—Ä–æ–≤–µ–Ω—å –í1.2 - –ø–æ —Å—É–±–±–æ—Ç–∞–º –≤ 14:00;\n'
    'üéâ–£—Ä–æ–≤–µ–Ω—å B2.1- –ø–æ —Å—É–±–±–æ—Ç–∞–º –≤ 14:00;\n'
    'üéâ–£—Ä–æ–≤–µ–Ω—å –í2.2 - –ø–æ –≤—Ç–æ—Ä–Ω–∏–∫–∞–º –∏ —á–µ—Ç–≤–µ—Ä–≥–∞–º –≤ 18:00\n'
    'üéâ–£—Ä–æ–≤–µ–Ω—å –°1 - –ø–æ –≤—Ç–æ—Ä–Ω–∏–∫–∞–º –∏ —á–µ—Ç–≤–µ—Ä–≥–∞–º –≤ 18:00\n'
    '–û–ù–õ–ê–ô–ù\n'
    'üéâ–£—Ä–æ–≤–µ–Ω—å B2.2- –ø–æ –≤—Ç–æ—Ä–Ω–∏–∫–∞–º –∏ —á–µ—Ç–≤–µ—Ä–≥–∞–º –≤ 20:00 (–æ–Ω–ª–∞–π–Ω);\n'
    'üéâ–£—Ä–æ–≤–µ–Ω—å –°2 - –ø–æ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞–º –∏ —Å—Ä–µ–¥–∞–º –≤ 20:00 (–æ–Ω–ª–∞–π–Ω).')
    await call.message.edit_text(schedule)
    await call.answer()

@start_router.callback_query(F.data == 'profile')
async def get_inline_btn_profile(call: CallbackQuery):
    '''
    user_prev_menu[call.from_user.id] = (
        call.message.text,
        call.message.reply_markup
    )
    #print('*\n*\n*\n' + user_prev_menu(call.from_user.id).text + '*\n*\n*\n')
    print('*\n*\n*\n' + call.message.text + '*\n*\n*\n')
    '''
    await call.message.edit_text('___User_Data___', reply_markup=inline_keyboards.inline_kb_profile())
    await call.answer()

@start_router.callback_query(F.data == 'about_school')
async def get_inline_btn_about(call: CallbackQuery):
    await call.message.answer()
